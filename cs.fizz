---
options:
    crash_on_yield: false
---
# Model a critical section with no enforcement of mutual exclusion

always assertion MutualExclusion:
    for p1 in processes:
        for p2 in processes:
            if p1.in_cs and p2.in_cs and p1!=p2:
                return False
    return True

STATE = enum('READY', 'RUNNING')
NUM_PROCESSES = 2

role Process:
    action Init:
        self.in_cs = False

    action Next:
        # before critical section
        pass

        # critical section
        self.in_cs = True
        pass

        # after critical section
        self.in_cs = False
        pass

        self.state = STATE.READY


action Init:
    processes = []
    for i in range(0, NUM_PROCESSES):
        processes.append(Process())

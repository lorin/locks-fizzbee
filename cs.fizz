---
options:
    crash_on_yield: false
---
# Model a critical section with no enforcement of mutual exclusion

always assertion MutualExclusion:
    return len(in_cs) <= 1

STATE = enum('READY', 'RUNNING')
NUM_PROCESSES = 2

role Process:
    action Init:
        self.state = STATE.READY

    action Next:
        require self.state == STATE.READY
        self.state = STATE.RUNNING

        # before critical section
        pass

        in_cs.add(self.__id__)
        # critical section
        pass
        in_cs.remove(self.__id__)

        # after critical section
        pass

        self.state = STATE.READY


action Init:
    processes = []
    in_cs = set()
    for i in range(0, NUM_PROCESSES):
        processes.append(Process())

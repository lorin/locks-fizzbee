---
options:
    crash_on_yield: false
---

always assertion MutualExclusion:
    for p1 in processes:
        for p2 in processes:
            if p1.in_cs and p2.in_cs and p1!=p2:
                return False
    return True

NUM_PROCESSES = 3

role Process:
    action Init:
        self.in_cs = False

    action Next:
        # before critical section
        pass

        atomic:
            require not lock
            lock.add(self.__id__)

        #
        # critical section
        #
        self.in_cs = True
        pass
        self.in_cs = False

        # release lock
        lock.clear()


action Init:
    processes = []
    lock = set()
    in_cs = set()
    for i in range(0, NUM_PROCESSES):
        processes.append(Process())
